ENVIRONMENT:
 * date of performance: 2009/09/20
 * test through the 2000 orders and 14,000 items
 * against the database PostgreSQL 8.3 (on the same computer)
 * values are an average of 5 measurements
 * DB indexes was insignificant
 * UJO Framework release 0.91
 * Hibernate 3.3.1.GA + EhCachProvider
 * Java version "1.6.0_14", running with default parameters
 * Intel Dual Core, 1GB RAM
 * Windows XP + SP3
 * benchmark code is available on SourceForge
--

ACTION DESCRIPTIONS:
 * META-DATA: loading data from the ORM description, Hibernate also re-creates database model
 * INSERT: insert 2000 orders, 14000 items and 1 user
 * SINGLE SELECT: the one big select for all order items (with a condition) 
 * EMPTY SELECTS: 2000 selects with the empty result - where a condition contains different parameter values
 * MULTI SELECT: many different selects to emulate a server application or statements with no optimization
 * UPDATE: modify and save a loaded BO
 * DELETE: execution many statements to delete all table rows
--

RESULT DATA:
** HIBERNATE 3.3.1.GA + POJO: AVERAGE-TIME [s]
	META-DATA: 1.431
	INSERT: 11.369
	SINGLE SELECT: 0.581
	EMPTY SELECT: 152.534
	MULTI SELECT: 169.518
	UPDATE: 3.694
	DELETE: 210.144
** HIBERNATE 3.3.1.GA + UJO: AVERAGE-TIME [s]
	META-DATA: 1.462
	INSERT: 12.109
	SINGLE SELECT: 0.519
	EMPTY SELECT: 94.853
	MULTI SELECT: 95.150
	UPDATE: 3.782
	DELETE: 141.040
** Ujorm 0.91: AVERAGE-TIME [s]
	META-DATA: 0.212
	INSERT: 9.878
	SINGLE SELECT: 0.356
	EMPTY SELECT: 1.203
	MULTI SELECT: 21.178
	UPDATE: 7.703
	DELETE: 99.038
--

