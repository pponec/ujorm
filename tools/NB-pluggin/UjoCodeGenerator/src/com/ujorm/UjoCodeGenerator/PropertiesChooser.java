/*
 *  Copyright 2012 Martin Mahr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.ujorm.UjoCodeGenerator;

import com.ujorm.UjoCodeGenerator.bo.KeyItem;
import java.util.List;
import javax.swing.DefaultButtonModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author Martin Mahr <mahr@effectiva.cz>
 */
public class PropertiesChooser extends javax.swing.JPanel {
    /**
     * Creates new form PropertiesChooser
     */
    public PropertiesChooser(List<KeyItem> data) {
        
        DefaultListModel defaultListModel = new DefaultListModel();        
        for (KeyItem item : data){
            defaultListModel.addElement(item);
        }
        
        initComponents();
        properties.setModel(defaultListModel);
        cbGetters.getModel().setSelected(true);
        cbSetters.getModel().setSelected(true);
    }
    
    /** Select all items */
    public void selectAll() {
        properties.setSelectionInterval(0, properties.getModel().getSize() - 1);
    }

    /** Return selected properties */
    public KeyItem[] getSeletedProperties() {
        Object[] selects = properties.getSelectedValues();
        KeyItem[] result = new KeyItem[selects.length];
        System.arraycopy(selects, 0, result, 0, selects.length);
        return result;
    }
    
    /** Are the Getters required ? */
    public boolean isGettersRequired() {
        return cbGetters.getModel().isSelected();
    }

    /** Are the Setters required ? */
    public boolean isSettersRequired() {
        return cbSetters.getModel().isSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        properties = new javax.swing.JList();
        cbGetters = new javax.swing.JCheckBox();
        cbSetters = new javax.swing.JCheckBox();

        jScrollPane1.setViewportView(properties);

        cbGetters.setText("Getters"); // NOI18N

        cbSetters.setText("Setters"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbSetters)
                            .addComponent(cbGetters))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(cbGetters)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSetters)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbGetters;
    private javax.swing.JCheckBox cbSetters;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList properties;
    // End of variables declaration//GEN-END:variables
}
